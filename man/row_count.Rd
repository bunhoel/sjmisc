% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/row_count.R
\name{row_count}
\alias{row_count}
\title{Count row indices}
\usage{
row_count(x, ..., count, var = "rowcount", append = FALSE)
}
\arguments{
\item{x}{A vector or data frame.}

\item{...}{Optional, unquoted names of variables that should be selected for
further processing. Required, if \code{x} is a data frame (and no
vector) and only selected variables from \code{x} should be processed.
You may also use functions like \code{:} or dplyr's \code{\link[dplyr]{select_helpers}}.
The latter must be stated as formula (i.e. beginning with \code{~}).
See 'Examples' or \href{../doc/design_philosophy.html}{package-vignette}.}

\item{count}{The value for which the row sum should be computed. May be a numeric
value, a character string (for factors or character vectors), \code{NA},
\code{Inf} or \code{NULL} to count missing or infinite values, or
null-values.}

\item{var}{Name of new the variable with the row or column counts.}

\item{append}{Logical, if \code{TRUE} and \code{x} is a data frame,
\code{x} including the new variables as additional columns is returned;
if \code{FALSE} (the default), only the new variables are returned.}
}
\value{
A tibble with one variable: the sum of \code{count} appearing in each
        row of \code{x}. If \code{append = TRUE}, \code{x} including this
        variable will be returned.
}
\description{
\code{row_count()} mimics base R's \code{rowSums()}, with sums
             for a specific value indicated by \code{count}. Hence, it is equivalent
             to \code{rowSums(x == count, na.rm = TRUE)}. However, this function
             is designed to work nicely within a pipe-workflow and allows select-helpers
             for selecting variables and the return value is always a tibble
             (with one variable).
}
\examples{
library(dplyr)
library(tibble)
dat <- tribble(
  ~c1, ~c2, ~c3, ~c4,
    1,   3,   1,   1,
    2,   2,   1,   1,
    3,   1,   2,   3,
    1,   2,   1,   2,
    3,  NA,   3,   1,
   NA,   3,  NA,   2
)

row_count(dat, count = 1)
row_count(dat, count = NA)
row_count(dat, c1:c3, count = 2, append = TRUE)

}
